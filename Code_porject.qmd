---
title: "Untitled"
author: "Kylian SANTOS and Cédric BAZILE"
format: html
editor: visual
---

```{r configuration}
here::i_am("CNC_INSEE_project.Rproj")

library(here)
library(dplyr)
library(tidyr)
library(readxl)
```
# Formating and cleanning of the CNC database

```{r message=FALSE}

file_path <- "exploitation_données_par_département.xlsx"

cnc_data <- read_excel(file_path, sheet = 4, skip = 5)

cnc_data_long <-  cnc_data |>
  select(-colnames(cnc_data)[2]) |>
  rename(departement_code = colnames(cnc_data)[1]) |>
  pivot_longer(
    cols = -departement_code,
    names_to = "year", 
    values_to = excel_sheets(file_path)[4]
    )

cnc_data_merge <- cnc_data_long

for (i in 5:which(excel_sheets(file_path) == "tmofAE")) {
  cnc_data <- read_excel(file_path, sheet = i, skip = 5)

cnc_data_long <-  cnc_data |>
  select(-colnames(cnc_data)[2]) |>
  rename(departement_code = colnames(cnc_data)[1]) |>
  pivot_longer(
    cols = -departement_code,
    names_to = "year", 
    values_to = excel_sheets(file_path)[i]
    )

cnc_data_merge <- left_join(cnc_data_merge, cnc_data_long, by = c("departement_code", "year"))
}

```

We have an xlsx file with multiple sheets. Each sheet is a variable, rows are departements and columns years. we have to rename the first column so that we make sure that for each sheet we have the same name, we drop the second column which is the departement name and then we can merge.


```{r}
cnc_data_clean <- cnc_data_merge |>
  filter(!is.na(departement_code))
```

In each sheet we have a row with the total so we drop it 

# Merging the INSEE and CNC database 

```{r}
insee_data <- read.csv("INSEE_clean.csv")

insee_data <- insee_data |> rename(departement_code = DEP_RES_21, year =  AN_RECENS)
cnc_data_clean$year <- as.integer(cnc_data_clean$year) 

data_merge <- left_join(cnc_data_clean, insee_data, by = c("departement_code", "year"))
```

```{r}
data_clean <- data_merge |>
  filter(!is.na(POND))
```

